import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import BotCommandScopeDefault, KeyboardButtonPollType, ReplyKeyboardRemove, Message, ContentType, CallbackQuery
from aiogram.filters.command import Command, CommandObject
from aiogram.filters import Text
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.enums import ParseMode
import core.menu.basic as m_base
import PostgreImpulsFM as ps	
from config_reader import config
#from core.keyboards.reclam_keyboard import *
import core.keyboards.reclam_keyboard as rec_key
import core.keyboards.muzyka_keyboard as muz_key
import core.keyboards.goroskop_keybort as gor_keyb
import core.keyboards.othe_keyboard as othe_key
import core.web.get_text_horoscope as text_gor

user: dict = {'which_section': ""}

#API_TOKEN = '6271475626:AAG3g1nvJCvOIUMKXNiQlFqJsRRP5wGekv8'
#bot = Bot(token=config.bot_token.get_secret_value())
API_TOKEN = config.bot_token.get_secret_value()#'6150937954:AAFpU39nfdMhZcpPN4PewwXFuy-DUDLxFag'
ad = config.admin_id


bot = Bot(token=API_TOKEN)
dp = Dispatcher()

async def haderImpulsFM(message: types.Message):
    await message.answer_photo(photo="https://impulsfm.ru/wp-content/uploads/2023/03/cropped-%D0%98%D0%BC%D0%BF%D1%83%D0%BB%D1%8C%D1%81FM-logo-%D1%81%D0%B0%D0%B9%D1%82.png")


@dp.message(Command('reclama'))
async def reclamaInLineKeyBord(message: Message):
    user['which_section']="reclama"
    await haderImpulsFM(message)
    await message.answer(text='–û—Å—Ç–∞–≤—Ç–µ —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã. –ù–∞–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ, —á—Ç–æ —Ö–æ—Ç–µ–ª–∏ —Ä–µ–∫–ª–∞–º–∏—Ä–æ–≤–∞—Ç—å.', reply_markup=rec_key.reclam_keyboard) 
    
@dp.message(Command('muzyka'))
async def muzykaInLineKeyBord(message: Message):
    user['which_section']="muzyka"
    await haderImpulsFM(message)
    await message.answer("–ü—Ä–∏–≤–µ—Ç, "+message.from_user.first_name+
                         "!üòâ\n‚ôæ–í —ç—Ñ–∏—Ä–µ —Ä–∞–¥–∏–æüìª –ò–º–ø—É–ª—å—Å FMüé∂.\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ  —É—Å–ª—ã—à–∞—Ç—å –ª—é–±–∏–º—É—é –ø–µ—Å–Ω—éüíÉ –∏ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∏–≤–µ—Ç —Ä–æ–¥–Ω—ã–º, –¥—Ä—É–∑—å—è–º, –∫–æ–ª–ª–µ–≥–∞–º,  –≤—Å–µ–º-–≤—Å–µ–º-–≤—Å–µ–ºüëã, –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ –ø–æ—Ö–≤–∞–ª–∏—Ç—å –Ω–∞—Å,  —Å–∫–æ—Ä–µ–µ, —Å–∫–æ—Ä–µ–µ, —Å–∫–æ—Ä–µ–µ –∑–≤–æ–Ω–∏—Ç–µüìû –∏ –æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—èüßë‚Äçüíª.\n –ö—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏?"
                         ,reply_markup=muz_key.muzyka_keyboard)
    await message.answer(text='–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏.') #,reply_markup=loc_tel_poll_keybord

@dp.message(Command('otzyvy'))
async def otzyvyInLineKeyBord(message: Message):
    user['which_section']="otzyvy"
    await haderImpulsFM(message)    
    await message.answer(text='–ß—Ç–æ –≤—ã —Å–∫–∞–∂–µ—Ç–µ –æ –Ω–∞—à–µ–º —Ä–∞–¥–∏–æ.')

@dp.message(Command('predlozheniia'))
async def predlozheniiaInLineKeyBord(message: Message):
    user['which_section']="predlozheniia"
    await haderImpulsFM(message)
    await message.answer(text='–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –µ—â–µ —É–ª—ã—à–∞—Ç—å –Ω–∞ –Ω–∞—à–µ–º —Ä–∞–¥–∏–æ.')

@dp.message(Command('goroskop'))
async def goroskopKeyBord(message: Message):
    user['which_section']="goroskop"
    await haderImpulsFM(message)
    await message.answer(text='–ü—Ä–∏–≤–µ—Ç. –≤—ã–±–µ—Ä–∏ —Å–≤–æ–π –∑–Ω–∞–∫ –∑–∞–¥–∏–∞–∫–∞', reply_markup=gor_keyb.get_zodiac_keyboard())

@dp.callback_query()
async def get_horoscope(call: CallbackQuery):
    await call.answer()
    zodiac = call.data
    text = await text_gor.get_text_horoscope(zodiac=zodiac)
    await call.message.edit_text(text=text, reply_markup=gor_keyb.get_zodiac_keyboard())

# –ó–¥–µ—Å—å F - —ç—Ç–æ message

@dp.message(F.photo)
async def photo_msg(message: Message):    
    await message.answer("–≠—Ç–æ —Ç–æ—á–Ω–æ –∫–∞–∫–æ–µ-—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ! –ù–æ —è –∏—Ö –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é —Å–µ–±–µ.")
    #await m_base.get_photo(message=message, bot=bot)

@dp.message(Text(text=[rec_key.reclam_text_cancel,muz_key.muzyka_text_cancel],ignore_case=True))
async def RemuveKeyBord(message: Message):
    ps.PostgreSQLWorker(message,bot, user["which_section"])
    if rec_key.reclam_text_cancel == message.text:
        await message.answer(text='–í–∞—à–∞ —Ä–µ–∫–ª–∞–º–∞ –ø—Ä–∏—è–Ω—Ç–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ.',reply_markup=ReplyKeyboardRemove())
    elif muz_key.muzyka_text_cancel == message.text:
        await message.answer(text='–°–ø–∞—Å–∏–±–æ. –ú—ã —É—á—Ç–µ–º –≤–∞—à–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ.',reply_markup=ReplyKeyboardRemove())


@dp.message()
async def with_puree(message: Message):
    if user['which_section']=='':
        await message.answer('–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –ø–æ –∫–Ω–æ–ø–æ—á–∫–µ "–ú–µ–Ω—é" –≤—ã–±–µ—Ä–µ—Ç–µ —Ä–∞–∑–¥–µ–ª!')
    else:     
        #ps.PostgreSQLWorker(message,bot, user["which_section"])
        pass
    


async def stop_bot(bot:Bot):
    await bot.send_message(873646319, text='–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!')

async def start_bot(bot:Bot):
    await bot.send_message(873646319,text='–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    logging.basicConfig(level=logging.INFO,
                        format="%(asctime)s - [%(levelname)s] - %(name)s - "
                                "(%(filename)s).%(funcName)s(%(lineno)d) - %(message)s"
                        )
    await bot.delete_webhook(drop_pending_updates=True)
    #dp.include_router(router=router)
    dp.startup.register(m_base.set_main_menu)
    dp.startup.register(start_bot)
    dp.shutdown.register(stop_bot)
    
 #   dp.message.register(m_base.get_photo, Command(commands='photo'))
#    dp.message.register(m_base.get_photo, Command(commands='audio'))
#    dp.message.register(m_base.get_photo, Command(commands='document'))
#    dp.message.register(m_base.get_photo, Command(commands='mediagroup'))
 #   dp.message.register(m_base.get_photo, Command(commands='photo'))
#    dp.message.register(m_base.get_photo, Command(commands='sticker'))
#    dp.message.register(m_base.get_photo, Command(commands='video'))
#    dp.message.register(m_base.get_photo, Command(commands='video_note'))
#    dp.message.register(m_base.get_photo, Command(commands='voice'))
    
    #dp.message.register(get_location, ContentTypeFilte)
    try:
        await dp.start_polling(bot)    
    finally :
        await bot.session.close()   

if __name__ == "__main__":
    asyncio.run(main())
